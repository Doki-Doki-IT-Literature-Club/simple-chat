# version: "3"

services:
  session-keeper:
    build:
      context: ./back/go-services
      dockerfile: ./build-dev/session-keeper/Dockerfile
    image: session-keeper-live
    container_name: ws-live-reload
    environment:
      - PORT=8081
    volumes:
      - go-services:/app
    depends_on:
      - kafka

  chat-api:
    build:
      context: ./back/go-services
      dockerfile: ./build-dev/chat-api/Dockerfile
    image: chat-api-live
    container_name: chat-api
    working_dir: /app
    volumes:
      - go-services:/app
    depends_on:
      - chronicler-db
    environment:
      DB_USER: $CHRONICLER_DB_USER
      DB_PASSWORD: $CHRONICLER_DB_PASS
      DB_NAME: $CHRONICLER_DB_NAME
      DB_HOST: $CHRONICLER_DB_HOST

  chronicler-db:
    image: postgres:latest
    container_name: chronicler-db
    environment:
      POSTGRES_USER: $CHRONICLER_DB_USER
      POSTGRES_PASSWORD: $CHRONICLER_DB_PASS
      POSTGRES_DB: $CHRONICLER_DB_NAME
    volumes:
      - chronicler-db:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  chronicler:
    build:
      context: ./back/go-services
      dockerfile: ./build-dev/chronicler/Dockerfile
    image: chronicler-live
    container_name: chronicler
    working_dir: /app
    volumes:
      - go-services:/app
    depends_on:
      - kafka
      - chronicler-db
    environment:
      DB_USER: $CHRONICLER_DB_USER
      DB_PASSWORD: $CHRONICLER_DB_PASS
      DB_NAME: $CHRONICLER_DB_NAME
      DB_HOST: $CHRONICLER_DB_HOST

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  chat-front:
    image: node:22-alpine3.19
    build:
      context: ./front/web
      dockerfile: ./Dockerfile
    container_name: chat-front
    working_dir: /app
    ports:
      - "3000:3000"
    volumes:
      - chat-front:/app
    command: npm run dev

  api-gateway:
    image: nginx:alpine
    container_name: api-gateway
    ports:
      - "8080:80"
    volumes:
      - ./back/api-gateway/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - session-keeper
      - chat-api

volumes:
  go-services:
    driver: local
    driver_opts:
      type: 'none'
      device: './back/go-services'
      o: bind
  chronicler-db:
    driver: local
    driver_opts:
      type: 'none'
      device: './postgres_data'
      o: bind
  chat-front:
    driver: local
    driver_opts:
      type: 'none'
      device: './front/web'
      o: bind
