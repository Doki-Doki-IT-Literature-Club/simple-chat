services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  ws-live-reload:
    image: cosmtrek/air
    container_name: ws-live-reload
    working_dir: /app
    volumes:
      - ws-app:/app
    depends_on:
      - kafka

  rest-live-reload:
    image: cosmtrek/air
    container_name: rest-live-reload
    working_dir: /app
    volumes:
      - rest-app:/app
      - packages:/pkg
    depends_on:
      - chronicler-db
    environment:
      DB_USER: $CHRONICLER_DB_USER
      DB_PASSWORD: $CHRONICLER_DB_PASS
      DB_NAME: $CHRONICLER_DB_NAME
      DB_HOST: $CHRONICLER_DB_HOST

  chronicler-live-reload:
    image: cosmtrek/air
    container_name: chronicler-live-reload
    working_dir: /app
    volumes:
      - chronicler-app:/app
      - packages:/pkg
    depends_on:
      - kafka
      - chronicler-db
    environment:
      DB_USER: $CHRONICLER_DB_USER
      DB_PASSWORD: $CHRONICLER_DB_PASS
      DB_NAME: $CHRONICLER_DB_NAME
      DB_HOST: $CHRONICLER_DB_HOST


  chronicler-db:
    image: postgres:latest
    container_name: chronicler-db
    environment:
      POSTGRES_USER: $CHRONICLER_DB_USER
      POSTGRES_PASSWORD: $CHRONICLER_DB_PASS
      POSTGRES_DB: $CHRONICLER_DB_NAME
    volumes:
      - chronicler-db:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  api-gateway:
    image: nginx:alpine
    container_name: api-gateway
    ports:
      - "8080:80"
    volumes:
      - ./api-gateway/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - ws-live-reload
      - rest-live-reload

volumes:
  rest-app:
    driver: local
    driver_opts:
      type: 'none'
      device: './rest'
      o: bind
  ws-app:
    driver: local
    driver_opts:
      type: 'none'
      device: './ws'
      o: bind
  chronicler-app:
    driver: local
    driver_opts:
      type: 'none'
      device: './chronicler'
      o: bind
  chronicler-db:
    driver: local
    driver_opts:
      type: 'none'
      device: './postgres_data'
      o: bind
  packages:
    driver: local
    driver_opts:
      type: 'none'
      device: './pkg'
      o: bind